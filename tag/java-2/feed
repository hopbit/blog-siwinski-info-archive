<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Continous Integration &#187; java</title>
	<atom:link href="http://blog.siwinski.info/tag/java-2/feed" rel="self" type="application/rss+xml" />
	<link>http://blog.siwinski.info</link>
	<description>playing with code &#38; music</description>
	<lastBuildDate>Sun, 10 Nov 2013 02:18:37 +0000</lastBuildDate>
	<language>pl-PL</language>
		<sy:updatePeriod>hourly</sy:updatePeriod>
		<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=3.7.1</generator>
	<item>
		<title>Oracle Java Developers Day &#8211; Notatki</title>
		<link>http://blog.siwinski.info/dev/java-dev/oracle-java-developers-day-notatki</link>
		<comments>http://blog.siwinski.info/dev/java-dev/oracle-java-developers-day-notatki#comments</comments>
		<pubDate>Thu, 29 Nov 2012 22:08:06 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[event]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[jee]]></category>
		<category><![CDATA[jse]]></category>
		<category><![CDATA[oracle]]></category>
		<category><![CDATA[workshops]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=386</guid>
		<description><![CDATA[Luźnie notatki z warsztatów, które miały miejsce 28 listopada 2012 w Warszawie. Prezentacje: Java EE 7 in details Java EE &#8211; the road ahead Introduction to Java FX Moving Java Forward Materiały z warsztatów:   Developing JAX-RS Web Applications using JAX-RS &#8230; <a href="http://blog.siwinski.info/dev/java-dev/oracle-java-developers-day-notatki">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Luźnie notatki z <a href="http://www.oracle.com/webapps/events/ns/EventsDetail.jsp?p_eventId=152439&amp;src=7555284&amp;src=7555284&amp;Act=31">warsztatów</a>, które miały miejsce 28 listopada 2012 w Warszawie.</p>
<p><strong>Prezentacje:</strong></p>
<ul>
<li><a href="http://www.slideshare.net/lukaszromanowski1981/poland-31-nov12-java-ee-7-in-details">Java EE 7 in details</a></li>
<li><a href="http://www.slideshare.net/lukaszromanowski1981/poland-31-nov12-java-ee-keynote">Java EE &#8211; the road ahead</a></li>
<li><a href="http://www.slideshare.net/lukaszromanowski1981/03-java-fxintroductionsritter">Introduction to Java FX</a></li>
<li><a href="http://www.slideshare.net/lukaszromanowski1981/keyne-simon-ritter">Moving Java Forward</a></li>
</ul>
<p><strong>Materiały z warsztatów: </strong></p>
<ul>
<li> <a href="http://delabassee.com/lab">Developing JAX-RS Web Applications using JAX-RS 2.0 (JSR 339), Server Side Event and WebSockets (JSR 356)</a></li>
</ul>
<p><strong>Tematy:</strong></p>
<p>JSE8</p>
<ul>
<li>&lt;&gt; diamond operator</li>
<li>try with resources</li>
<li>more informative back/stacktraces</li>
<li>multi-catch &#8211; catch (ExceptionA e | ExceptionB e2 &#8230;) {&#8230;.}</li>
<li>JSR 203 (nio2)</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/nio/file/Path.html">java.nio.Path</a> instead of <a href="http://docs.oracle.com/javase/7/docs/api/java/io/File.html">java.io(nio?).File</a></li>
<li>java.nio.file.attribute package &amp; file metadata</li>
<li>JSR 166y: conc. API</li>
<li>jsr 166 &gt; jsr 166x &gt; jsr 166y</li>
<li>fork / join</li>
<li>Invoke Dynamic bytecode ????? (better 4 groovy/jython?)</li>
<li>jsr 344 &gt; jsf 2.2</li>
<li>java card</li>
<li>java me sim card</li>
<li><a href="http://www.oracle.com/technetwork/java/javamagazine/index.html">java magazine</a></li>
<li>raspberry</li>
<li><a href="http://jdk8.java.net">jdk8.java.net</a></li>
<li><a href="http://openjdk.java.net/projects/jigsaw/">project jigsaw</a></li>
</ul>
<p>JEE 7</p>
<ul>
<li>jee7 support for html5</li>
<li>jsr 88, jax rpc, cmp, bmp  &gt; drop @ jee7</li>
<li>html5, json (jsr 353), web socket (jsr 356), jsr 353 &gt; added @ jee7</li>
<li>jsr 352 &#8211; handle batch processing vs cobol/etl jobs or quartz?</li>
<li>// mix/replace above^ with cobol/etl batch processing possible?</li>
<li>interceptor</li>
<li>jsr 107 -&gt; java temporary caching &gt; ibm webshpere has it alredy?</li>
<li>jsr 236 &#8211; concurrency utils 4 jee /* why use concurrency (own threads) in jee, find some nice examples (bettter support in jee7) &#8211; creating own threads is discouraged */</li>
<li>web sockets &#8211; nice one, wstęp/przyczółek do aplikacji dla chmur?</li>
<li>jms &#8211; changes?</li>
<li>net beans &#8211; wtyczka do chrome do podglądania &#8222;w różnych&#8221; platformach (not only desktop but mobile too)</li>
<li>jsr 348- new jcp</li>
<li>jsr 336 &#8211; all jse7 contents</li>
<li>coin</li>
<li>binary type</li>
<li>swiching strings</li>
<li>simplyfing generics</li>
</ul>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/java-dev/oracle-java-developers-day-notatki/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Java 6 na Mac OS 10.5.8</title>
		<link>http://blog.siwinski.info/dev/java-6-na-mac-os-10-5-8</link>
		<comments>http://blog.siwinski.info/dev/java-6-na-mac-os-10-5-8#comments</comments>
		<pubDate>Thu, 25 Oct 2012 21:29:03 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Dev]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[Mac]]></category>
		<category><![CDATA[10.5.8]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[leopard]]></category>
		<category><![CDATA[mac]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=90</guid>
		<description><![CDATA[Nie jestem pewien czy u Ciebie to zadziała (u mnie na się udało*), ale możesz spróbować w ten sposób: wejdź na stronę: https://developer.apple.com/downloads/index.action (jeśli dobrze kojarzę trzeba się zarejestrować). w pole wyszukiwanie wpisz/wklej: Java for Mac OS X 10.5 Update &#8230; <a href="http://blog.siwinski.info/dev/java-6-na-mac-os-10-5-8">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Nie jestem pewien czy u Ciebie to zadziała (u mnie na się udało*), ale możesz spróbować w ten sposób:</p>
<ol>
<li>wejdź na stronę: <a href="https://developer.apple.com/downloads/index.action" target="_blank">https://developer.apple.com/<wbr />downloads/index.action</a> (jeśli dobrze kojarzę trzeba się zarejestrować).</li>
<li>w pole wyszukiwanie wpisz/wklej: Java for Mac OS X 10.5 Update 8 Developer Package</li>
<li>wyszukaj/Enter</li>
<li>pobierz plik: Java for Mac OS X 10.5 Update 8 Developer Package &#8211; .dmg (222.11MB)</li>
<li>zainstaluj pobrany plik.</li>
<li>daj znać czy pomogło/nie pomogło</li>
</ol>
<p>Spędziłem nad tym tematem kiedyś (zbyt) dużo czasu w szperając w Google. Liczę, że ktoś inny oszczędzi swój czas dzięki powyższym informacjom.</p>
<p>PS: źródło które naprowadziło mnie na rozwiązanie: <a href="http://nrudnik.blogspot.com/2010/11/java-6-on-mac-os-x-1058.html" target="_blank">http://nrudnik.blogspot.<wbr />com/2010/11/java-6-on-mac-os-<wbr />x-1058.html</a><br />
PS2: Moim zdaniem ten hak to specjalne, nieoficjalne wydanie dla programistów/developerów Java, dzięki czemu mogą oni tworzyć, rozwijać i uruchamiać programy dostosowane do Javy w wersji 6 bez konieczności aktualizacji systemu.<br />
PS3: najwyższa pora rozważyć aktualizację systemu do Snow Leopard (10.6) lub wyższej&#8230;</p>
<p>* mac os 10.5.8, procesor Intel Core 2 Duo (2.2 GHz), 64-bit</p>
<p><img class="alignnone" title="Java 6 na Mac OS Leopard (10.5.8)" alt="" src="https://lh6.googleusercontent.com/-AGPjBvasTSQ/UADDQcxbemI/AAAAAAAACsc/NkOK7N1Ph1M/s502/2012-07-14-a.png" width="402" height="395" /></p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/java-6-na-mac-os-10-5-8/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Problems with project compilation under RAD 7.0 boundled with WAS 6.1</title>
		<link>http://blog.siwinski.info/dev/java-dev/problems-with-project-compilation-under-rad-7-0-boundled-with-was-6-1</link>
		<comments>http://blog.siwinski.info/dev/java-dev/problems-with-project-compilation-under-rad-7-0-boundled-with-was-6-1#comments</comments>
		<pubDate>Thu, 25 Nov 2010 22:25:40 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[compilation problem]]></category>
		<category><![CDATA[eclipse]]></category>
		<category><![CDATA[ibm]]></category>
		<category><![CDATA[ide]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[problem]]></category>
		<category><![CDATA[rad]]></category>
		<category><![CDATA[tools]]></category>
		<category><![CDATA[websphere]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=562</guid>
		<description><![CDATA[If You have error log with below codes: SRVE0203E  SRVE0206E  SRVE0187E  SRVE0210I  SRVE0234I Then just read carefully given error log (each path, line by line) and find the path which You&#8217;ve set incorrectly. &#8211; Links: * IBM developerWorks]]></description>
				<content:encoded><![CDATA[<p><strong>If</strong> You have error log with below codes:</p>
<blockquote><p>SRVE0203E  SRVE0206E  SRVE0187E  SRVE0210I  SRVE0234I</p></blockquote>
<p><strong>Then</strong> just read carefully given error log (each path, line by line) and find the path which You&#8217;ve set incorrectly.</p>
<p>&#8211;<br />
Links:<br />
* <a title="IBM developerWorks" href="http://www.ibm.com/developerworks/forums/thread.jspa?threadID=140825">IBM developerWorks</a></p>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/java-dev/problems-with-project-compilation-under-rad-7-0-boundled-with-was-6-1/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>html:img vs html:image</title>
		<link>http://blog.siwinski.info/dev/htmlimg-vs-htmlimage</link>
		<comments>http://blog.siwinski.info/dev/htmlimg-vs-htmlimage#comments</comments>
		<pubDate>Thu, 11 Mar 2010 20:14:28 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Dev]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[struts]]></category>
		<category><![CDATA[tiles]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=136</guid>
		<description><![CDATA[Ku pamięci &#60;html:image/&#62; tworzy &#60;input type=&#8221;image&#8221; /&#62; &#60;html:img /&#62; tworzy zwykły &#60;img /&#62;]]></description>
				<content:encoded><![CDATA[<p>Ku pamięci <img src='http://blog.siwinski.info/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> </p>
<blockquote><p>&lt;html:image/&gt; tworzy &lt;input type=&#8221;image&#8221; /&gt;<br />
<!-- jego kliknięcie powoduje submit formularza --></p></blockquote>
<blockquote><p>&lt;html:img /&gt; tworzy zwykły &lt;img /&gt;</p></blockquote>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/htmlimg-vs-htmlimage/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Regular Expressions Reference</title>
		<link>http://blog.siwinski.info/dev/java-dev/regular-expressions-reference</link>
		<comments>http://blog.siwinski.info/dev/java-dev/regular-expressions-reference#comments</comments>
		<pubDate>Thu, 20 Sep 2007 10:54:42 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[regexp]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=1317</guid>
		<description><![CDATA[Regular Expressions Reference &#160;]]></description>
				<content:encoded><![CDATA[<p><a href="http://docs.oracle.com/javase/1.4.2/docs/api/java/util/regex/Pattern.html#sum">Regular Expressions Reference</a></p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/java-dev/regular-expressions-reference/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to create runnable jar?</title>
		<link>http://blog.siwinski.info/dev/how-to-create-runnable-jar</link>
		<comments>http://blog.siwinski.info/dev/how-to-create-runnable-jar#comments</comments>
		<pubDate>Tue, 01 May 2007 20:30:46 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Dev]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[basics]]></category>
		<category><![CDATA[jar]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[packaging]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=1852</guid>
		<description><![CDATA[cd ~/test vim MyStarterClass.java public class MyStarterClass &#123; &#160; public static void main&#40;String&#91;&#93; args&#41; &#123; &#160; &#160; System.out.println&#40;&#34;Hello Jar&#34;&#41;; &#160; &#125; &#125; $ javac MyStarterClass.java $ java MyStarterClass &#160;Hello Jar $ echo &#34;Main-Class: MyStarterClass&#34; &#62; manifest.mf $ jar cvfm HelloJar.jar &#8230; <a href="http://blog.siwinski.info/dev/how-to-create-runnable-jar">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<div class="codecolorer-container bash vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap"><span style="color: #7a0874; font-weight: bold;">cd</span> ~<span style="color: #000000; font-weight: bold;">/</span><span style="color: #7a0874; font-weight: bold;">test</span><br />
<span style="color: #c20cb9; font-weight: bold;">vim</span> MyStarterClass.java</div></div>
<div class="codecolorer-container java vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="java codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap"><span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> MyStarterClass <span style="color: #009900;">&#123;</span><br />
&nbsp; <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Hello Jar&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; <span style="color: #009900;">&#125;</span><br />
<span style="color: #009900;">&#125;</span></div></div>
<div class="codecolorer-container bash vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">$ javac MyStarterClass.java<br />
$ java MyStarterClass<br />
&nbsp;Hello Jar<br />
$ <span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;Main-Class: MyStarterClass&quot;</span> <span style="color: #000000; font-weight: bold;">&gt;</span> manifest.mf<br />
$ jar cvfm HelloJar.jar manifest.mf MyStarterClass.class<br />
<span style="color: #666666; font-style: italic;"># or if you have more than one class: </span><br />
<span style="color: #666666; font-style: italic;"># &nbsp; $ jar cvfm HelloJar.jar manifest.mf *.class</span><br />
$ HelloJar.jar<br />
&nbsp;Hello Jar</div></div>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/how-to-create-runnable-jar/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Understanding Generics in Java</title>
		<link>http://blog.siwinski.info/dev/java-dev/understanding-generics-in-java</link>
		<comments>http://blog.siwinski.info/dev/java-dev/understanding-generics-in-java#comments</comments>
		<pubDate>Thu, 05 Apr 2007 20:40:45 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[basics]]></category>
		<category><![CDATA[generics]]></category>
		<category><![CDATA[java]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=2028</guid>
		<description><![CDATA[What does &#8222;E&#8221; stand for? Let&#8217;s take ArrayList for an example. E is a stand-in for &#8222;the type of element you want this collection to hold and return&#8221; (E is abbreviation of the word element). &#8222;E&#8221; can be treated like &#8230; <a href="http://blog.siwinski.info/dev/java-dev/understanding-generics-in-java">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p><strong>What does &#8222;E&#8221; stand for?</strong></p>
<p>Let&#8217;s take <a href="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/ArrayList.html" target="_blank">ArrayList</a> for an example.</p>
<p>E is a stand-in for &#8222;the type of element you want this collection to hold and return&#8221; (E is abbreviation of the word element). &#8222;E&#8221; can be treated like a placeholder for the REAL type you use when you declare and create ArrayList. &#8222;E&#8221; determines what kind of objects you&#8217;re allowed to add to the ArrayList. So You can thing that E stand for &#8222;whatever type&#8221;? It&#8217;s something like wildcard/joker.</p>
<p><strong>What does &#8222;T&#8221; stand for?</strong></p>
<p>You can use anything that&#8217;s legal Java identifier as a wildcard/joker. Using single letters &#8222;T&#8221; and &#8222;E&#8221; is a convention/standard (but You can use in your code &#8222;Whatever&#8221; if You want <img src='http://blog.siwinski.info/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' />  ). Usually You should use &#8222;T&#8221; which is abbreviation of word &#8222;type&#8221;. &#8222;E&#8221; should be used when your writing some sort of collection class, where &#8222;E&#8221; means &#8222;type of element that specific colletion holds&#8221;.</p>
<p><strong>Hint on &#8222;extends&#8221; keyword</strong></p>
<p>Remeber that keyword &#8222;extends&#8221; in generics works both for classes and interfaces &#038; it means &#8222;is-a&#8221; relation.</p>
<p><strong>How to read JavaDocs?</strong></p>
<p>Example 1</p>
<div class="codecolorer-container java vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="java codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap"><span style="color: #666666; font-style: italic;">// T must be a whatever type that implements Comparable interface</span><br />
<span style="color: #666666; font-style: italic;">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ^-------------------</span><br />
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #339933;">&lt;</span>T <span style="color: #000000; font-weight: bold;">extends</span> Comparable<span style="color: #339933;">&gt;</span> <span style="color: #000066; font-weight: bold;">void</span> sort<span style="color: #009900;">&#40;</span>List<span style="color: #339933;">&lt;</span>T<span style="color: #339933;">&gt;</span> list<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span><br />
<span style="color: #666666; font-style: italic;">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v-----------</span><br />
<span style="color: #666666; font-style: italic;">// you can pass in only a List(or subtype of List) that uses a parametrized </span><br />
<span style="color: #666666; font-style: italic;">// type that implements (or extends) Comparable</span><br />
<br />
&nbsp; <span style="color: #666666; font-style: italic;">// some sorting code...</span><br />
<span style="color: #009900;">&#125;</span></div></div>
<p>Example 2</p>
<div class="codecolorer-container java vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="java codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap"><span style="color: #666666; font-style: italic;">// Type of parameter for Comparable must be of type T or one of </span><br />
<span style="color: #666666; font-style: italic;">// T's supertypes. Example - java.lang.Integer is subtype of java.lang.Number.</span><br />
<span style="color: #666666; font-style: italic;">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;^--------</span><br />
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #339933;">&lt;</span>T <span style="color: #000000; font-weight: bold;">extends</span> Comparable<span style="color: #339933;">&lt;?</span> <span style="color: #000000; font-weight: bold;">super</span> T<span style="color: #339933;">&gt;&gt;</span> <span style="color: #000066; font-weight: bold;">void</span> sort<span style="color: #009900;">&#40;</span>List<span style="color: #339933;">&lt;</span>T<span style="color: #339933;">&gt;</span> list<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span><br />
&nbsp; <span style="color: #666666; font-style: italic;">// some sorting code...</span><br />
<span style="color: #009900;">&#125;</span></div></div>
<hr/>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/java-dev/understanding-generics-in-java/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Java Collections Reference</title>
		<link>http://blog.siwinski.info/dev/java-dev/java-collections-reference</link>
		<comments>http://blog.siwinski.info/dev/java-dev/java-collections-reference#comments</comments>
		<pubDate>Sun, 01 Apr 2007 20:16:22 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[basis]]></category>
		<category><![CDATA[collections]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[jse]]></category>
		<category><![CDATA[reference]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=1963</guid>
		<description><![CDATA[ArrayList - fast adding items at the end of collection LinkedList - designed to give better performance when you insert or delete elements from the middle of the collection (in practice, an ArrayList is still usually what you want.) HashSet - prevent duplicates &#8230; <a href="http://blog.siwinski.info/dev/java-dev/java-collections-reference">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p><strong><a title="java.util.ArrayList API" href="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/ArrayList.html">ArrayList</a> </strong>- fast adding items at the end of collection</p>
<p><a href="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/LinkedList.html"><strong>LinkedList</strong> </a>- designed to give better performance when you insert or delete elements from the middle of the collection (in practice, an ArrayList is still usually what you want.)</p>
<p><a href="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/HashSet.html"><strong>HashSet</strong> </a>- prevent duplicates in the collection, and given an element, can find that element in the collection quickly</p>
<p><a title="java.util.TreeSet API" href="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/TreeSet.html" target="_blank"><strong>TreeSet</strong></a> - keep the elements sorted and prevents duplicates.</p>
<p><a title="java.util.HashMap API" href="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/HashMap.html"><strong>HashMap</strong> </a>- let&#8217;s you store and access elements as key(name)/value pairs</p>
<p><a href="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/LinkedHashMap.html"><strong>LinkedHashMap</strong> </a>- like a regular HashMap, except it can remember the order in which elements (name/value pairs) were inserted, or it can be configured to remember the order in which elements were last accessed</p>
<p><a href="http://docs.oracle.com/javase/1.5.0/docs/guide/collections/index.html">Java Collections Framework &#8211; Oracle Reference<br />
</a><a href="http://docs.oracle.com/javase/tutorial/collections/index.html">Tutorial on Java Collections</a></p>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/java-dev/java-collections-reference/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to settle &amp; show current thread name?</title>
		<link>http://blog.siwinski.info/dev/how-to-settle-show-current-thread-name</link>
		<comments>http://blog.siwinski.info/dev/how-to-settle-show-current-thread-name#comments</comments>
		<pubDate>Fri, 02 Mar 2007 21:45:07 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Dev]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[basics]]></category>
		<category><![CDATA[java]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=1842</guid>
		<description><![CDATA[Code: class ShowThreadNameJob implements Runnable &#123; &#160; public static void main&#40;String&#91;&#93; args&#41; &#123; &#160; &#160; ShowThreadNameJob job = new ShowThreadNameJob&#40;&#41;; &#160; &#160; Thread one = new Thread&#40;job&#41;; &#160; &#160; Thread two = new Thread&#40;job&#41;; &#160; &#160; one.setName&#40;&#34;Thread 1&#34;&#41;; &#160; &#160; &#8230; <a href="http://blog.siwinski.info/dev/how-to-settle-show-current-thread-name">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Code:</p>
<div class="codecolorer-container java vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="java codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap"><span style="color: #000000; font-weight: bold;">class</span> ShowThreadNameJob <span style="color: #000000; font-weight: bold;">implements</span> <span style="color: #003399;">Runnable</span> <span style="color: #009900;">&#123;</span><br />
&nbsp; <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span><br />
&nbsp; &nbsp; ShowThreadNameJob job <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ShowThreadNameJob<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <br />
&nbsp; &nbsp; <span style="color: #003399;">Thread</span> one <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Thread</span><span style="color: #009900;">&#40;</span>job<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; <span style="color: #003399;">Thread</span> two <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Thread</span><span style="color: #009900;">&#40;</span>job<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; one.<span style="color: #006633;">setName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Thread 1&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; two.<span style="color: #006633;">setName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Thread 2&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; one.<span style="color: #006633;">start</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; two.<span style="color: #006633;">start</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; <span style="color: #009900;">&#125;</span><br />
&nbsp; <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> run<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span> <br />
&nbsp; &nbsp; <span style="color: #000000; font-weight: bold;">for</span><span style="color: #009900;">&#40;</span><span style="color: #000066; font-weight: bold;">int</span> x <span style="color: #339933;">=</span> <span style="color: #cc66cc;">0</span><span style="color: #339933;">;</span> x <span style="color: #339933;">&lt;</span> <span style="color: #cc66cc;">10</span><span style="color: #339933;">;</span> x<span style="color: #339933;">++</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #003399;">Thread</span>.<span style="color: #006633;">currentThread</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">getName</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">+</span> <span style="color: #0000ff;">&quot; is runnig.&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; <span style="color: #009900;">&#125;</span><br />
&nbsp; <span style="color: #009900;">&#125;</span><br />
<span style="color: #009900;">&#125;</span></div></div>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/how-to-settle-show-current-thread-name/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to read file in Java (simple version)?</title>
		<link>http://blog.siwinski.info/dev/java-dev/how-to-read-file-in-java-simple-version</link>
		<comments>http://blog.siwinski.info/dev/java-dev/how-to-read-file-in-java-simple-version#comments</comments>
		<pubDate>Thu, 22 Feb 2007 21:04:40 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[basis]]></category>
		<category><![CDATA[io]]></category>
		<category><![CDATA[java]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=1941</guid>
		<description><![CDATA[Simple program that read &#038; print each line from given file. import java.io.File; import java.io.FileReader; import java.io.BufferedReader; class ReadAFile &#123; &#160; public static void main&#40;String&#91;&#93; args&#41; &#123; &#160; &#160; try &#123; &#160; &#160; &#160; File myFile = new File&#40;&#34;MyText.txt&#34;&#41;; &#160; &#8230; <a href="http://blog.siwinski.info/dev/java-dev/how-to-read-file-in-java-simple-version">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Simple program that read &#038; print each line from given file.</p>
<div class="codecolorer-container java vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="java codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap"><span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.io.File</span><span style="color: #339933;">;</span><br />
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.io.FileReader</span><span style="color: #339933;">;</span><br />
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.io.BufferedReader</span><span style="color: #339933;">;</span><br />
<br />
<span style="color: #000000; font-weight: bold;">class</span> ReadAFile <span style="color: #009900;">&#123;</span><br />
<br />
&nbsp; <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #003399;">File</span> myFile <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">File</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;MyText.txt&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #003399;">FileReader</span> fileReader <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">FileReader</span><span style="color: #009900;">&#40;</span>myFile<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #003399;">BufferedReader</span> reader <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">BufferedReader</span><span style="color: #009900;">&#40;</span>fileReader<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
<br />
&nbsp; &nbsp; &nbsp; <span style="color: #003399;">String</span> line <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #000000; font-weight: bold;">while</span> <span style="color: #009900;">&#40;</span><span style="color: #009900;">&#40;</span>line <span style="color: #339933;">=</span> reader.<span style="color: #006633;">readLine</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">!=</span><span style="color: #000066; font-weight: bold;">null</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span>line<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #009900;">&#125;</span><br />
&nbsp; &nbsp; &nbsp; reader.<span style="color: #006633;">close</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; <span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">catch</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">Exception</span> e<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; e.<span style="color: #006633;">printStackTrace</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
&nbsp; &nbsp; <span style="color: #009900;">&#125;</span><br />
&nbsp; <span style="color: #009900;">&#125;</span><br />
<span style="color: #009900;">&#125;</span></div></div>
<p>Simple MyText.txt file:</p>
<div class="codecolorer-container text vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">Took a ride to the end of the line<br />
Where no one ever goes<br />
Ended up on a broken train with nobody I know<br />
But the pain and the longing's the same<br />
When you're dying<br />
Now I’m lost and I’m screaming for help alone<br />
<br />
Relax, take it easy<br />
For there is nothing that we can do<br />
Relax, take it easy<br />
Blame it on me or blame it on you<br />
<br />
It’s as if I’m scared<br />
It’s as if I’m terrified<br />
It’s as if I scared<br />
It’s as if I’m playing with fire<br />
Scared<br />
It’s as if I’m terrified<br />
Are you scared?<br />
Are we playing with fire?<br />
<br />
Relax<br />
There is an answer to the darkest times<br />
It’s clear we don’t understand it but the last thing on my mind<br />
Is to leave you<br />
I believe that we’re in this together<br />
Don’t scream, there are so many roads left<br />
<br />
Relax, take it easy<br />
For there is nothing that we can do<br />
Relax, take it easy<br />
Blame it on me or blame it on you<br />
<br />
It’s as if I’m scared<br />
It’s as if I’m terrified<br />
It’s as if I scared<br />
It’s as if I’m playing with fire<br />
Scared<br />
It’s as if I’m terrified<br />
Are you scared?<br />
Are we playing with fire?<br />
<br />
Relax<br />
Relax</div></div>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/java-dev/how-to-read-file-in-java-simple-version/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
