<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Continous Integration &#187; script</title>
	<atom:link href="http://blog.siwinski.info/tag/script/feed" rel="self" type="application/rss+xml" />
	<link>http://blog.siwinski.info</link>
	<description>playing with code &#38; music</description>
	<lastBuildDate>Sun, 10 Nov 2013 02:18:37 +0000</lastBuildDate>
	<language>pl-PL</language>
		<sy:updatePeriod>hourly</sy:updatePeriod>
		<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=3.7.1</generator>
	<item>
		<title>How to move couple of random mp3 files that exist within current directory (recursively)?</title>
		<link>http://blog.siwinski.info/dev/how-to-move-couple-of-random-mp3-files-that-exist-within-current-directory-recursively</link>
		<comments>http://blog.siwinski.info/dev/how-to-move-couple-of-random-mp3-files-that-exist-within-current-directory-recursively#comments</comments>
		<pubDate>Thu, 07 Feb 2013 21:27:14 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Bash]]></category>
		<category><![CDATA[Dev]]></category>
		<category><![CDATA[bash]]></category>
		<category><![CDATA[ilovebash]]></category>
		<category><![CDATA[oneliner]]></category>
		<category><![CDATA[perl]]></category>
		<category><![CDATA[regexp]]></category>
		<category><![CDATA[script]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=750</guid>
		<description><![CDATA[Oneliner showing that bash is stunning. find . -iregex '.*\.mp3' &#124; perl -n -e 'print if (rand() &#60; .02)' &#124; tail -n 50 &#124; while read line; do mv -v &#34;$line&#34; $randmp3/.; done And here little info for myself if &#8230; <a href="http://blog.siwinski.info/dev/how-to-move-couple-of-random-mp3-files-that-exist-within-current-directory-recursively">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Oneliner showing that bash is stunning.</p>
<div class="codecolorer-container bash vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap"><span style="color: #c20cb9; font-weight: bold;">find</span> . <span style="color: #660033;">-iregex</span> <span style="color: #ff0000;">'.*\.mp3'</span> <span style="color: #000000; font-weight: bold;">|</span> <span style="color: #c20cb9; font-weight: bold;">perl</span> <span style="color: #660033;">-n</span> <span style="color: #660033;">-e</span> <span style="color: #ff0000;">'print if (rand() &lt; .02)'</span> <span style="color: #000000; font-weight: bold;">|</span> <span style="color: #c20cb9; font-weight: bold;">tail</span> <span style="color: #660033;">-n</span> <span style="color: #000000;">50</span> <span style="color: #000000; font-weight: bold;">|</span> <span style="color: #000000; font-weight: bold;">while</span> <span style="color: #c20cb9; font-weight: bold;">read</span> line; <span style="color: #000000; font-weight: bold;">do</span> <span style="color: #c20cb9; font-weight: bold;">mv</span> <span style="color: #660033;">-v</span> <span style="color: #ff0000;">&quot;<span style="color: #007800;">$line</span>&quot;</span> <span style="color: #007800;">$randmp3</span><span style="color: #000000; font-weight: bold;">/</span>.; <span style="color: #000000; font-weight: bold;">done</span></div></div>
<p>And here little info for myself if I forgot what above spell means <img src='http://blog.siwinski.info/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> </p>
<div class="codecolorer-container bash vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap"><span style="color: #666666; font-style: italic;"># find all mp3 files within current dir re</span><br />
<span style="color: #c20cb9; font-weight: bold;">find</span> . <span style="color: #660033;">-iregex</span> <span style="color: #ff0000;">'.*\.mp3'</span><br />
<br />
<span style="color: #666666; font-style: italic;"># filter random 2% of above files</span><br />
<span style="color: #c20cb9; font-weight: bold;">perl</span> <span style="color: #660033;">-n</span> <span style="color: #660033;">-e</span> <span style="color: #ff0000;">'print if (rand() &lt; .02)'</span><br />
<br />
<span style="color: #666666; font-style: italic;"># show last 50 lines </span><br />
<span style="color: #c20cb9; font-weight: bold;">tail</span> <span style="color: #660033;">-n</span> <span style="color: #000000;">50</span><br />
<br />
<span style="color: #666666; font-style: italic;"># move all founded and randomly filtered files</span><br />
<span style="color: #666666; font-style: italic;"># to directory of my choose (mp3 player/phone sd card)</span><br />
<span style="color: #000000; font-weight: bold;">while</span> <span style="color: #c20cb9; font-weight: bold;">read</span> line; <span style="color: #000000; font-weight: bold;">do</span> <span style="color: #c20cb9; font-weight: bold;">mv</span> <span style="color: #660033;">-v</span> <span style="color: #ff0000;">&quot;<span style="color: #007800;">$line</span>&quot;</span> <span style="color: #007800;">$rand</span>-mp3<span style="color: #000000; font-weight: bold;">/</span>.; <span style="color: #000000; font-weight: bold;">done</span></div></div>
<p>PS: I&#8217;ve done it because uncle google <a href="http://www.google.pl/search?q=how+to+print+couple+random+mp3+files+recursively+within+current+directory&amp;oq=how+to+print+couple+random+mp3+files+recursively+within+current+directory&amp;sourceid=chrome&amp;ie=UTF-8">couldn&#8217;t resolve my problem</a>. Let me know, if You know simpler/better solution that will work on your OS.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/how-to-move-couple-of-random-mp3-files-that-exist-within-current-directory-recursively/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Skrypt uruchamiający przy starcie wybrane aplikacje tuż po zalogowaniu do systemu</title>
		<link>http://blog.siwinski.info/dev/skrypt-uruchamiajacy-przy-starcie-wybrane-aplikacje</link>
		<comments>http://blog.siwinski.info/dev/skrypt-uruchamiajacy-przy-starcie-wybrane-aplikacje#comments</comments>
		<pubDate>Wed, 12 Sep 2012 21:39:20 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Dev]]></category>
		<category><![CDATA[automation]]></category>
		<category><![CDATA[batch]]></category>
		<category><![CDATA[script]]></category>
		<category><![CDATA[win]]></category>
		<category><![CDATA[windows]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=638</guid>
		<description><![CDATA[:REM ### start apps script ### @ECHO OFF echo --- PROGRAM NAME --- start /d &#34;c:\path\to\my\application\&#34; application.exe PAUSE]]></description>
				<content:encoded><![CDATA[<pre class="wp-code-highlight prettyprint">
:REM ### start apps script ###

@ECHO OFF

echo --- PROGRAM NAME ---
start /d &quot;c:\path\to\my\application\&quot; application.exe

PAUSE

</pre>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/skrypt-uruchamiajacy-przy-starcie-wybrane-aplikacje/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Usprawnień w importowaniu muzyki c.d.</title>
		<link>http://blog.siwinski.info/dev/usprawnien-w-importowaniu-muzyki-c-d</link>
		<comments>http://blog.siwinski.info/dev/usprawnien-w-importowaniu-muzyki-c-d#comments</comments>
		<pubDate>Thu, 29 Dec 2011 23:26:09 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Dev]]></category>
		<category><![CDATA[DJ]]></category>
		<category><![CDATA[Mac]]></category>
		<category><![CDATA[Python]]></category>
		<category><![CDATA[automation]]></category>
		<category><![CDATA[itunes]]></category>
		<category><![CDATA[mp3]]></category>
		<category><![CDATA[python]]></category>
		<category><![CDATA[script]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=125</guid>
		<description><![CDATA[Poza zamianą nazw plików tak aby składały się tylko z samych małych liter była jeszcze jedna kwestia, którą niepotrzebnie robiłem ‚z palca&#8217;. iTunes ma to do siebie, że importuje albumy CD wg następującej konwencji: &#124;- artysta 1 &#124; &#124;- nazwa &#8230; <a href="http://blog.siwinski.info/dev/usprawnien-w-importowaniu-muzyki-c-d">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Poza zamianą nazw plików tak aby składały się tylko z samych małych liter była jeszcze jedna kwestia, którą niepotrzebnie robiłem ‚z palca&#8217;. iTunes ma to do siebie, że importuje albumy CD wg następującej konwencji:</p>
<blockquote><p>|- artysta 1<br />
| |- nazwa albumu<br />
| |- 1-01 nazwa utworu.mp3<br />
| |- 1-02 nazwa utworu.mp3<br />
| |- 2-01 nazwa utworu.mp3<br />
|- artysta 2<br />
| |- nazwa albumu<br />
| |- 1-03 nazwa utworu.mp3<br />
| |- 1-04 nazwa utworu.mp3<br />
| |- 2-02 nazwa utworu.mp3<br />
|- artysta 3<br />
| |- nazwa albumu<br />
| |- 1-05 nazwa utworu.mp3<br />
| |- 2-03 nazwa utworu.mp3<br />
| |- 2-04 nazwa utworu.mp3</p></blockquote>
<p>Natomiast moja konwencja jest następująca:</p>
<blockquote><p>|- nazwa albumu<br />
| |- artysta1 &#8211; utwór1.mp3<br />
| |- artysta1 &#8211; utwór2.mp3<br />
| |- artysta2 &#8211; utwór3.mp3</p></blockquote>
<p>Oto skrypt który konwertuje pliki zaimportowane z iTunes do ‚mojego formatu’ katalogowania i nazewnictwa plików:</p>
<p><a title="_convert_mp3_filenames_imported_with_itunes.py" href="http://siwinski.info/script/python/_convert_mp3_filenames_imported_with_itunes_v3.txt" target="_blank">_convert_mp3_filenames_imported_with_itunes.py</a></p>
<p>Fakt, że pierwsza wersja skryptu (druga również) nie za każdym razem działała tak jak tego oczekiwałem. Okazało się, że iTunes ma więcej niż jedną metodę nadawania nazw plikom. Musiałem poświęcić parę wieczorów na poprawki w celu dopracowania skryptu, ale zysk jest widoczny dla mnie gołym okiem. Wykorzystując powyższy skrypt mogę obecnie w tym samym czasie zaimportować 2-3 razy więcej albumów niż wcześniej. Jak to zwykle bywa, każde nowe rozwiązanie rodzi nowe problemy&#8230; Ciekawe jak szybko zostanę zmuszony do wymiany dysku na większy&#8230;</p>
<p>Jednocześnie stwierdzam, że Python coraz bardziej mi się podoba. Po pierwsze zarówno sam język jak i kolejne funkcjonalności/biblioteki, których potrzebowałem są bardzo łatwe i intuicyjne w wykorzystaniu. Po drugie, wolę nie myśleć ile kodu i czasu zajęłoby mi zrobienie tego samego przy użyciu Javy&#8230; Odnoszę wrażenie, że nauka tworzenia takich prostych narzędzi w tym języku jest okupione bardzo małym kosztem.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/usprawnien-w-importowaniu-muzyki-c-d/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Zamiana znaków nazwy pliku na małe litery</title>
		<link>http://blog.siwinski.info/dev/zamiana-znakow-nazwy-pliku-na-male-litery</link>
		<comments>http://blog.siwinski.info/dev/zamiana-znakow-nazwy-pliku-na-male-litery#comments</comments>
		<pubDate>Mon, 28 Nov 2011 20:11:33 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Dev]]></category>
		<category><![CDATA[Python]]></category>
		<category><![CDATA[python]]></category>
		<category><![CDATA[script]]></category>
		<category><![CDATA[tools]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=133</guid>
		<description><![CDATA[Porządkując swoją kolekcję muzyki często zdarza mi się, że muszę hurtowo zmieniać nazwy wielu plików audio. Mam taką konwencję nazewnictwa plików: artysta lub zespol &#8211; nazwa utworu (jakis remix).rozszerzenie Oto prosty skrypt w języku Python, który umożliwia zamianę dużych liter &#8230; <a href="http://blog.siwinski.info/dev/zamiana-znakow-nazwy-pliku-na-male-litery">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Porządkując swoją kolekcję muzyki często zdarza mi się, że muszę hurtowo zmieniać nazwy wielu plików audio. Mam taką konwencję nazewnictwa plików:</p>
<p>artysta lub zespol &#8211; nazwa utworu (jakis remix).rozszerzenie</p>
<p>Oto prosty skrypt w języku Python, który umożliwia zamianę dużych liter na małe w nazwach plików znajdujących się w bieżącym katalogu:</p>
<p><a title="filenames_to_lowercase_txt" href="http://siwinski.info/script/python/_filenames_to_lowercase.txt" target="_blank">_filenames_to_lowercase.txt</a></p>
<p>W napisaniu skryptu pomógł <a href="http://mail.python.org/pipermail/tutor/2007-February/052607.html" target="_blank">wujek google</a>.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/zamiana-znakow-nazwy-pliku-na-male-litery/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Bardzo prosty skrypt do robienia inkrementalnych kopii zapasowych</title>
		<link>http://blog.siwinski.info/dev/bardzo-prosty-skrypt-do-robienia-inkrementalnych-kopii-zapasowych</link>
		<comments>http://blog.siwinski.info/dev/bardzo-prosty-skrypt-do-robienia-inkrementalnych-kopii-zapasowych#comments</comments>
		<pubDate>Tue, 22 Nov 2011 22:52:17 +0000</pubDate>
		<dc:creator><![CDATA[Łukasz Siwiński]]></dc:creator>
				<category><![CDATA[Bash]]></category>
		<category><![CDATA[Dev]]></category>
		<category><![CDATA[backup]]></category>
		<category><![CDATA[bash]]></category>
		<category><![CDATA[script]]></category>
		<category><![CDATA[simple]]></category>

		<guid isPermaLink="false">http://blog.siwinski.info/?p=580</guid>
		<description><![CDATA[&#8222;Ludzie dzielą się na tych, którzy robią backupy i na tych, którzy będą je robić&#8230;&#8221; Zdecydowanie wolę należeć do tej pierwszej grupy. W związku z tym przygotowałem bardzo prosty skrypt, który jednokierunkowo kopiuje pliki z jednego dysku/katalogu do drugiego (z &#8230; <a href="http://blog.siwinski.info/dev/bardzo-prosty-skrypt-do-robienia-inkrementalnych-kopii-zapasowych">Czytaj dalej <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<blockquote><p><em>&#8222;Ludzie dzielą się na tych, którzy robią backupy i na tych, którzy będą je robić&#8230;&#8221;</em></p></blockquote>
<p>Zdecydowanie wolę należeć do tej pierwszej grupy. W związku z tym przygotowałem bardzo prosty skrypt, który jednokierunkowo kopiuje pliki z jednego dysku/katalogu do drugiego (z lewej na prawą). Skrypt sprawdziłem i przetestowałem na własnej maszynie w systemie OSX, ale powinien z powodzeniem działać również na Linuksie.</p>
<p>Oto co robi skrypt:</p>
<ol>
<li>wyczyść konsolę</li>
<li>wyświetl ścieżki</li>
<li>wyświetl komunikat (tu można jeszcze przerwać skrypt)</li>
<li>wyświetl godzinę rozpoczęcia</li>
<li>skopiuj dane # polecenie: rsync -avp $left $right</li>
<li>wyświetl godzinę zakończenia</li>
<li>wyświetl komunikat pożegnalny</li>
</ol>
<div class="codecolorer-container bash vibrant" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:10%;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap"><span style="color: #666666; font-style: italic;">#!/bin/bash</span><br />
<span style="color: #c20cb9; font-weight: bold;">clear</span><br />
<br />
<span style="color: #666666; font-style: italic;">####### configuration start #############</span><br />
<br />
<span style="color: #007800;">left</span>=<span style="color: #ff0000;">&quot;/Volumes/LAPTOP/Foto/.&quot;</span><br />
<span style="color: #007800;">right</span>=<span style="color: #ff0000;">&quot;/Volumes/BACKUP-DRIVE/Foto&quot;</span><br />
<br />
<span style="color: #666666; font-style: italic;">####### configuration end ###############</span><br />
<br />
<span style="color: #7a0874; font-weight: bold;">echo</span><br />
<span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">'left dir: '</span> <span style="color: #007800;">$left</span><br />
<span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">'right dir: '</span><span style="color: #007800;">$right</span><br />
<br />
<span style="color: #7a0874; font-weight: bold;">echo</span><br />
<span style="color: #c20cb9; font-weight: bold;">read</span> <span style="color: #660033;">-p</span> <span style="color: #ff0000;">&quot;Press ENTER to start backup or COMMAND+C to abort...&quot;</span><br />
<br />
<span style="color: #7a0874; font-weight: bold;">echo</span><br />
<span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;--------------- START: <span style="color: #780078;">`date`</span> ---------------&quot;</span><br />
<br />
<span style="color: #7a0874; font-weight: bold;">echo</span><br />
rsync <span style="color: #660033;">-avP</span> <span style="color: #007800;">$left</span> <span style="color: #007800;">$right</span><br />
<br />
<span style="color: #7a0874; font-weight: bold;">echo</span><br />
<span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;--------------- KONIEC: <span style="color: #780078;">`date`</span> ---------------&quot;</span><br />
<br />
<span style="color: #7a0874; font-weight: bold;">echo</span><br />
<span style="color: #c20cb9; font-weight: bold;">read</span> <span style="color: #660033;">-p</span> <span style="color: #ff0000;">&quot;Press ENTER to finish...&quot;</span><br />
<br />
<span style="color: #7a0874; font-weight: bold;">echo</span> <br />
<span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;Good Bye!&quot;</span><br />
<span style="color: #7a0874; font-weight: bold;">echo</span></div></div>
<p><a title="simpleBackup.sh" href="http://siwinski.info/script/bash/simpleBackup.txt" target="_blank">simpleBackup.sh</a></p>
<p><!-- #tags:<br />
kopiowanie inkrementalne<br />
--></p>
]]></content:encoded>
			<wfw:commentRss>http://blog.siwinski.info/dev/bardzo-prosty-skrypt-do-robienia-inkrementalnych-kopii-zapasowych/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
