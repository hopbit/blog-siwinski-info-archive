<!DOCTYPE html>
<!--[if IE 6]>
<html id="ie6" lang="pl-PL">
<![endif]-->
<!--[if IE 7]>
<html id="ie7" lang="pl-PL">
<![endif]-->
<!--[if IE 8]>
<html id="ie8" lang="pl-PL">
<![endif]-->
<!--[if !(IE 6) | !(IE 7) | !(IE 8)  ]><!-->
<html lang="pl-PL">
<!--<![endif]-->
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<title>Git Tutorial  | Continous Integration</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="../wp-content/themes/twentyeleven/style.css" />
<link rel="pingback" href="../xmlrpc.php" />
<!--[if lt IE 9]>
<script src="http://blog.siwinski.info/wp-content/themes/twentyeleven/js/html5.js" type="text/javascript"></script>
<![endif]-->
<link rel="alternate" type="application/rss+xml" title="Continous Integration &raquo; Kanał z wpisami" href="../feed" />
<link rel="alternate" type="application/rss+xml" title="Continous Integration &raquo; Kanał z komentarzami" href="../comments/feed" />
<link rel='stylesheet' id='dark-css'  href='../wp-content/themes/twentyeleven/colors/dark.css' type='text/css' media='all' />
<link rel='stylesheet' id='codecolorer-css'  href='../wp-content/plugins/codecolorer/codecolorer.css@ver=0.9.9' type='text/css' media='screen' />
<script type='text/javascript' src='http://blog.siwinski.info/wp-includes/js/comment-reply.min.js?ver=3.7.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="../xmlrpc.php@rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://blog.siwinski.info/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='How to create patch in Eclipse' href='how-to-create-patch-in-eclipse' />
<link rel='next' title='git config' href='git-config' />
<meta name="generator" content="WordPress 3.7.1" />
<link rel='canonical' href='git-tutorial' />
<link rel='shortlink' href='git-tutorial' />
<link rel="stylesheet" type="text/css" href="../wp-content/plugins/wp-code-highlight/css/sunburst.css" media="screen" />
	<style>
		/* Link color */
		a,
		#site-title a:focus,
		#site-title a:hover,
		#site-title a:active,
		.entry-title a:hover,
		.entry-title a:focus,
		.entry-title a:active,
		.widget_twentyeleven_ephemera .comments-link a:hover,
		section.recent-posts .other-recent-posts a[rel="bookmark"]:hover,
		section.recent-posts .other-recent-posts .comments-link a:hover,
		.format-image footer.entry-meta a:hover,
		#site-generator a:hover {
			color: #e4741f;
		}
		section.recent-posts .other-recent-posts .comments-link a:hover {
			border-color: #e4741f;
		}
		article.feature-image.small .entry-summary p a:hover,
		.entry-header .comments-link a:hover,
		.entry-header .comments-link a:focus,
		.entry-header .comments-link a:active,
		.feature-slider a.active {
			background-color: #e4741f;
		}
	</style>
<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #e2e2e2; }
</style>
</head>

<body class="single single-post postid-662 single-format-standard custom-background singular two-column right-sidebar">
<div id="page" class="hfeed">
	<header id="branding" role="banner">
			<hgroup>
				<h1 id="site-title"><span><a href="../index.html" title="Continous Integration" rel="home">Continous Integration</a></span></h1>
				<h2 id="site-description">playing with code &amp; music</h2>
			</hgroup>

			
								<form method="get" id="searchform" action="../index.html">
		<label for="s" class="assistive-text">Szukaj</label>
		<input type="text" class="field" name="s" id="s" placeholder="Szukaj" />
		<input type="submit" class="submit" name="submit" id="searchsubmit" value="Szukaj" />
	</form>
			
			<nav id="access" role="navigation">
				<h3 class="assistive-text">Menu główne</h3>
								<div class="skip-link"><a class="assistive-text" href="git-tutorial#content" title="Przeskocz do tekstu">Przeskocz do tekstu</a></div>
				<div class="skip-link"><a class="assistive-text" href="git-tutorial#secondary" title="Przeskocz do widgetów">Przeskocz do widgetów</a></div>
								<div class="menu-start-container"><ul id="menu-start" class="menu"><li id="menu-item-1409" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1409"><a href="../food/cook-book.1">Cook Book</a></li>
<li id="menu-item-1339" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1339"><a title="Git How To" href="git-how-to">Git How To</a></li>
<li id="menu-item-1423" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1423"><a href="../dj/events-dj/events">Events</a></li>
<li id="menu-item-1617" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-1617"><a href="git-tutorial#">Guitar</a>
<ul class="sub-menu">
	<li id="menu-item-1620" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1620"><a href="../guitar-cat/guitar-chords">Chords</a></li>
	<li id="menu-item-1618" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1618"><a href="../guitar-cat/theory/notes-on-guitar-fretboard">Notes on guitar fretboard</a></li>
	<li id="menu-item-1428" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1428"><a href="../guitar-cat/piosenki">Song Book</a></li>
</ul>
</li>
<li id="menu-item-1363" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-1363"><a href="git-tutorial#">Sets</a>
<ul class="sub-menu">
	<li id="menu-item-1431" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1431"><a href="../sets/fresh-dance-music">Fresh Dance Music</a></li>
	<li id="menu-item-1435" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1435"><a href="../sets/progressive-awake">Progressive Awake</a></li>
	<li id="menu-item-1439" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1439"><a href="../sets/quantum-energy.1">Quantum Energy</a></li>
	<li id="menu-item-1443" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1443"><a href="../sets/unreleased-emotions.1">Unreleased Emotions</a></li>
</ul>
</li>
</ul></div>			</nav><!-- #access -->
	</header><!-- #branding -->


	<div id="main">

		<div id="primary">
			<div id="content" role="main">

				
					<nav id="nav-single">
						<h3 class="assistive-text">Nawigacja po wpisach</h3>
						<span class="nav-previous"><a href="how-to-create-patch-in-eclipse" rel="prev"><span class="meta-nav">&larr;</span> Wstecz</a></span>
						<span class="nav-next"><a href="git-config" rel="next">Dalej <span class="meta-nav">&rarr;</span></a></span>
					</nav><!-- #nav-single -->

					
<article id="post-662" class="post-662 post type-post status-publish format-standard hentry category-dev tag-example tag-git-2 tag-tutorial">
	<header class="entry-header">
		<h1 class="entry-title">Git Tutorial</h1>

				<div class="entry-meta">
			<span class="sep">Opublikowany </span><a href="git-tutorial" title="23:24" rel="bookmark"><time class="entry-date" datetime="2012-08-16T23:24:16+00:00">2012-08-16 23:23</time></a><span class="by-author"> <span class="sep"> przez </span> <span class="author vcard"><a class="url fn n" href="../author/hopbit.1" title="Zobacz wszystkie wpisy, których autorem jest Łukasz Siwiński" rel="author">Łukasz Siwiński</a></span></span>		</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

	<div class="entry-content">
		<pre class="wp-code-highlight prettyprint">
-----------------------------------------------------------------------------
### installation

sudo apt-get install git-core

-----------------------------------------------------------------------------
### setup

-----------------------------------------------------------------------------
## User Configuration

# Configure the user which will be used by git (of course you should use 
# your name

git config --global user.name &quot;Name Surname&quot;

# Same for the email address

git config --global user.email &quot;your.email@example.com&quot;

# Set default so that all changes are always pushed to the repository

# git config --global push.default &quot;matching&quot;

# how to check my/global git settings 

git config --list

# or
siwinski-info:~ Hopbit$ cd ~
siwinski-info:~ Hopbit$ cat .gitconfig

# Git store global settings in a .gitconfig file. 
# This file is located in user home directory.

-----------------------------------------------------------------------------
## color highlighting 

git config --global color.status auto
git config --global color.branch auto

-----------------------------------------------------------------------------
## ignore certain files

# add file .gitignore in the main directory
# Git also offers the global setting core.excludesfile to specify 
# global excludes. example

echo &quot;bin/&quot; &gt;&gt; .gitignore
echo &quot;.classpath&quot; &gt;&gt; .gitignore

-----------------------------------------------------------------------------
### getting started with git

-----------------------------------------------------------------------------
## create repository content

#Switch to home
cd ~/

# Create a directory
mkdir ~/repo01

# Switch into it
cd repo01

# Create a new directory
mkdir datafiles

# Create a few files
touch test01
touch test02
touch test03
touch datafiles/data.txt
# Put a little text into the first file
ls &gt;test01

-----------------------------------------------------------------------------
## create repository, add files and commit them
				
# Initialize the local Git repository
git init

# Add all (files and directories) to the Git repository
git add .

# Make a commit of your file to the local repository
git commit -m &quot;Initial commit&quot;

# Show the log file
git log

-----------------------------------------------------------------------------
### status, git and commit log

# See the current status of your repository 
# (which files are changed / new / deleted)
git status

# Show the differences between the uncommitted files 
# and the last commit in the current branch
git diff

# Add the changes to the index and commit
git add . &amp;&amp; git commit -m &quot;More chaanges - typo in the commit message&quot;

# Show the history of commits in the current branch

git log

# This starts a nice graphical view of the changes

gitk --all

-----------------------------------------------------------------------------
### Correction of commit messages - git amend

# The git amend command makes it possible to change the last commit message. 

git commit --amend -m &quot;More changes - now correct&quot;

-----------------------------------------------------------------------------
### delete files 

# Create a file and put it under version control

touch nonsense.txt
git add . &amp;&amp; git commit -m &quot;a new file has been created&quot;

# Remove the file

rm nonsense.txt

# Try standard way of committing -&gt; will not work 

git add . &amp;&amp; git commit -m &quot;a new file has been created&quot;

# Now commit with the -a flag

git commit -a -m &quot;File nonsense.txt is now removed&quot;

# Alternatively you could add deleted files to the staging index via

git add -A . 
git commit -m &quot;File nonsense.txt is now removed&quot;

-----------------------------------------------------------------------------
### remote repositories

-----------------------------------------------------------------------------
## set up remote (bare) git repository

# git allow to store remote repositories either on the network or locally

# Switch to the first repository
cd ~/repo01
# 
git clone --bare . ../remote-repository.git

# Check the content, it is identical to the .git directory in repo01
ls ~/remote-repository.git
 
-----------------------------------------------------------------------------
## push changes to another repository

# Make some changes in the first repository
cd ~/repo01

# Make some changes in the file
echo &quot;Hello, hello. Turn your radio on&quot; &gt; test01
echo &quot;Bye, bye. Turn your radio off&quot; &gt; test02

# Commit the changes, -a will commit changes for modified files
# but will not add automatically new files
git commit -a -m &quot;Some changes&quot;

# Push the changes
git push ../remote-repository.git

-----------------------------------------------------------------------------
## add remote

# Add ../remote-repository.git with the name origin
git remote add origin ../remote-repository.git 

# Again some changes
echo &quot;I added a remote repo&quot; &gt; test02
# Commit
git commit -a -m &quot;This is a test for the new remote origin&quot;
# If you do not label a repository it will push to origin
git push origin

-----------------------------------------------------------------------------
##  show the existing remote repositories

# Show the existing defined remote repositories
git remote
			
-----------------------------------------------------------------------------
## clone repository

# Create a new repository in a new directory via the following commands.
				
# Switch to home
cd ~
# Make new directory
mkdir repo02

# Switch to new directory
cd ~/repo02
# Clone
git clone ../remote-repository.git .

-----------------------------------------------------------------------------
## pull changes

# Pull allows you to get the latest changes from another repository. 
# In your second repository, make some changes, push them to your remote
# repository and pull these changes to your first repository.
				
# Switch to home
cd ~

# Switch to second directory
cd ~/repo02

# Make changes
echo &quot;A change&quot; &gt; test01

# Commit
git commit -a -m &quot;A change&quot;

# Push changes to remote repository
# Origin is automatically maintained as we cloned from this repository
git push origin

# Switch to the first repository and pull in the changes
cd ~/repo01
git pull ../remote-repository.git/

# Check the changes
less test01

-----------------------------------------------------------------------------
### 6. Revert Changes

# If you create files in your working copy which you do not want to commit, 
# you can discard them.

# Create a new file with content
touch test04
echo &quot;this is trash&quot; &gt; test04

# Make a dry-run to see what would happen
# -n is the same as --dry-run 
git clean -n

# Now delete
git clean -f

-----------------------------------------------------------------------------
# You can check out older revisions of your source code via the commit ID. 
# The commit ID is shown if you enter the git log command. It is displayed 
# behind the commit word.

# Switch to home
cd ~/repo01
# Get the log
git log

# Copy one of the older commits and checkout the older revision via 
git checkout commit_name


#If you have not added the changes to the staging index, you can also 
revert the changes directly.
			
#Some nonsense change
echo &quot;nonsense change&quot; &gt; test01

# Not added to the staging index. Therefore we can 
# just checkout the old version
git checkout test01

# Check the result
cat test01

# Another nonsense change
echo &quot;another nonsense change&quot; &gt; test01

# We add the file to the staging index
git add test01

# Restore the file in the staging index
git reset HEAD test01

# Get the old version from the staging index
git checkout test01

-----------------------------------------------------------------------------
</pre>
			</div><!-- .entry-content -->

	<footer class="entry-meta">
		Kategorie: <a href="../category/dev.2" title="Zobacz wszystkie wpisy z kategorii &#8222;Dev&#8221;" rel="category tag">Dev</a>. Tagi: <a href="../tag/example" rel="tag">example</a>, <a href="../tag/git-2.1" rel="tag">git</a>, <a href="../tag/tutorial" rel="tag">tutorial</a>. Autor: <a href="../author/hopbit.1">Łukasz Siwiński</a>. Dodaj zakładkę do <a href="git-tutorial" title="Bezpośredni odnośnik do &#8222;Git Tutorial&#8221;" rel="bookmark">bezpośredniego odnośnika</a>.		
			</footer><!-- .entry-meta -->
</article><!-- #post-662 -->

						<div id="comments">
	
	
	
			
</div><!-- #comments -->

				
			</div><!-- #content -->
		</div><!-- #primary -->

	<!--WP Code Highlight_start-->
	<script type="text/javascript">
		window.onload = function(){prettyPrint();};
	</script>
	<script type="text/javascript" src="../wp-content/plugins/wp-code-highlight/js/wp-code-highlight.js"></script>
	<!--WP Code Highlight_end-->

	</div><!-- #main -->

	<footer id="colophon" role="contentinfo">

			

			<div id="site-generator">
								<a href="http://wordpress.org/" title="Semantyczna, osobista platforma publikacyjna">Dumnie wspierane przez WordPressa</a>
			</div>
	</footer><!-- #colophon -->
</div><!-- #page -->


</body>
</html><script type="text/javascript"><!--
document.writeln('<'+'scr'+'ipt type="text/javascript" src="http://home.hit.stat24.com/_'+(new Date()).getTime()+'/script.js?id=d2OQbUb0WzOaSmvsssUXrKR..GLG7JfNlmLdsW2gIFP.E7"></'+'scr'+'ipt>');
//--></script>